name: Release Builds

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

env:
  CARGO_TERM_COLOR: always
  CARGO_NET_GIT_FETCH_WITH_CLI: true

jobs:
  build:
    name: Build (${{ matrix.target }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            target: x86_64-unknown-linux-gnu
            ext: tar.gz
          - os: ubuntu-22.04
            target: x86_64-unknown-linux-musl
            ext: tar.gz
          - os: windows-2022
            target: x86_64-pc-windows-msvc
            ext: zip
          - os: macos-13
            target: x86_64-apple-darwin
            ext: tar.gz

    env:
      VERSION: ${{ github.ref_name }}
      BIN_NAME: stash
      OUT_DIR: release-artifacts

    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - run: rustup target add ${{ matrix.target }}

      - name: Install MUSL tools
        if: matrix.target == 'x86_64-unknown-linux-musl'
        run: sudo apt-get update && sudo apt-get install -y musl-tools musl-dev

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: cargo-${{ runner.os }}-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}

      - name: Build
        run: cargo build --release --locked --target ${{ matrix.target }}

      - name: Test
        if: matrix.target == 'x86_64-unknown-linux-gnu'
        run: cargo test --release --locked --target ${{ matrix.target }}

      - name: Strip binary
        if: runner.os != 'Windows'
        run: strip target/${{ matrix.target }}/release/${{ env.BIN_NAME }} || true

      - name: Package
        shell: bash
        run: |
          mkdir -p $OUT_DIR
          BIN="target/${{ matrix.target }}/release/${BIN_NAME}"

          if [ "${{ runner.os }}" = "Windows" ]; then
            BIN="$BIN.exe"
            DIR="stash-$VERSION"
            mkdir "$DIR"
            cp "$BIN" LICENSE README.md -t "$DIR" 2>/dev/null || true
            powershell -NoLogo -NoProfile -Command "Compress-Archive -Path '$DIR' -DestinationPath '$OUT_DIR/stash-$VERSION-${{ matrix.target }}.zip'"
            powershell -NoLogo -NoProfile -Command "(Get-FileHash '$BIN' -Algorithm SHA256).Hash | Out-File -Encoding ASCII '$OUT_DIR/stash-$VERSION-${{ matrix.target }}.sha256'"
          else
            DIR="stash-$VERSION"
            mkdir "$DIR"
            cp "$BIN" LICENSE README.md -t "$DIR" 2>/dev/null || true
            tar -czf "$OUT_DIR/stash-$VERSION-${{ matrix.target }}.${{ matrix.ext }}" "$DIR"
            if [ "${{ matrix.os }}" = "macos-13" ]; then
              shasum -a 256 "$BIN" > "$OUT_DIR/stash-$VERSION-${{ matrix.target }}.sha256"
            else
              sha256sum "$BIN" > "$OUT_DIR/stash-$VERSION-${{ matrix.target }}.sha256"
            fi
          fi

      - uses: actions/upload-artifact@v4
        with:
          name: release-${{ matrix.target }}
          path: release-artifacts/*
